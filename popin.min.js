!function (a) { var b = 500, c = function (a, b) { var c = [], d = a.is("body"); return c.push('<div class="popin', d ? " popin-body" : "", b.css ? " " + b.css : "", '">'), c.push('<div class="popin-message-wrap', d ? " popin-message-wrap-body" : "", '">'), b.showClose && c.push('<button type="button" class="close" aria-hidden="true">×</button>'), c.push('<div class="alert alert-', b.type, " popin-message", d ? " popin-message-body" : "", '">', b.message, "</div>"), c.push("</div>", "</div>"), c.join("") }, d = { init: function (d) { var e = a.extend({ message: "", type: "info", css: "", showClose: !0, autoClose: !1 }, d); return this.each(function () { var f = a(this), g = a(c(f, e)); g.appendTo(f), g.find("button.close").click(function () { g.remove() }), g.slideDown(b); var h = 0; d.autoClose === !0 ? h = 3e3 : d.autoClose > 0 && (h = d.autoClose), h > 0 && window.setTimeout(function () { g.slideUp(b, function () { g.remove() }) }, h) }) }, close: function () { a(this).remove() } }; a.fn.popin = function (b) { return d[b] ? d[b].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof b && b ? void a.error("Method " + b + " does not exist on jQuery.popin") : d.init.apply(this, arguments) } }(jQuery);